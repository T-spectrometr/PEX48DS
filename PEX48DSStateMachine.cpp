/*----- PROTECTED REGION ID(PEX48DSStateMachine.cpp) ENABLED START -----*/
//=============================================================================
//
// file :        PEX48DSStateMachine.cpp
//
// description : State machine file for the PEX48DS class
//
// project :     
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
// Kirill Pshenichnyi (c) PNPI
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <PEX48DS.h>

/*----- PROTECTED REGION END -----*/	//	PEX48DS::PEX48DSStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================


namespace PEX48DS_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : PEX48DS::is_value_allowed()
 *	Description : Execution allowed for value attribute
 */
//--------------------------------------------------------
bool PEX48DS::is_value_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for value attribute in read access.
	/*----- PROTECTED REGION ID(PEX48DS::valueStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PEX48DS::valueStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : PEX48DS::is_Start_allowed()
 *	Description : Execution allowed for Start attribute
 */
//--------------------------------------------------------
bool PEX48DS::is_Start_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Start command.
	/*----- PROTECTED REGION ID(PEX48DS::StartStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PEX48DS::StartStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PEX48DS::is_Stop_allowed()
 *	Description : Execution allowed for Stop attribute
 */
//--------------------------------------------------------
bool PEX48DS::is_Stop_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Stop command.
	/*----- PROTECTED REGION ID(PEX48DS::StopStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PEX48DS::StopStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(PEX48DS::PEX48DSStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	PEX48DS::PEX48DSStateAllowed.AdditionalMethods

}	//	End of namespace
